<ol class="ml-8 border-l border-gray-300">
  @each(comment in nodeComments)
    @set('childComments', comments.filter(c => c.replyTo === comment.id))
    @set('rootParentId', comment.replyTo ? rootParentId : comment.id)
    @set('replyTo', comment.id)
    @set('levelIndex', levelIndex ? levelIndex + 1 : 1)

    <li>
      <div class="flex items-center justify-end space-x-3">
        <button type="button" @click="create( {{ comment.id }} )">
          Reply
        </button>
        <button type="button" @click="edit( {{ comment.id }} )">
          Edit
        </button>
        <form method="POST" action="{{ route('comments.destroy', { id: comment.id }, { qs: { _method: 'DELETE' }}) }}">
          {{ csrfField() }}
          <button type="submit">Delete</button>
        </form>
      </div>
      <h6>{{ comment.user?.username ?? comment.name }}</h6>
      <p>{{ comment.body }}</p>

      {{--  edit comment form  --}}
      <div x-show="editId === {{ comment.id }}">
        @!comment.form({
          ...comment.serialize(),
          cancelable: true,
          onCancel: 'cancel()'
        })
      </div>

      {{--  reply to form  --}}
      <div x-show="createId === {{ comment.id }}">
        @!comment.form({ 
          postId, 
          rootParentId, 
          replyTo, 
          levelIndex, 
          cancelable: true,
          onCancel: 'cancel()'
        })
      </div>
      
      @if (childComments.length)
        @!comment.list({ 
          postId, 
          rootParentId, 
          comments, 
          levelIndex,
          nodeComments: childComments,
        })
      @endif
    </li>
  @endeach
</ol>